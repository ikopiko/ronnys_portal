{"remainingRequest":"D:\\ronnys_portal\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\ronnys_portal\\src\\router\\views\\reports\\closed.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\ronnys_portal\\src\\router\\views\\reports\\closed.vue","mtime":1641798484000},{"path":"D:\\ronnys_portal\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\ronnys_portal\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\ronnys_portal\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\ronnys_portal\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["closed.vue"],"names":[],"mappings":";AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"closed.vue","sourceRoot":"src/router/views/reports","sourcesContent":["<script>\nimport axios from 'axios'\nimport excel from 'vue-excel-export'\nimport Layout from '../../layouts/main'\nimport PageHeader from '@/components/page-header'\n\n\nimport appConfig from \"@/app.config\";\nimport Vue from 'vue'\n\nVue.use(excel);\n\n/**\n * Products-order component\n */\nexport default {\n   page: {\n    title: \"Orders\",\n    meta: [{ name: \"description\", content: appConfig.description }]\n  },\n  components: { Layout, PageHeader },\n  computed: {\n\n    rows() {\n      return this.ordersList.length;\n    },\n  },\n  data() {\n    return {\n      fromDate: String(new Date()),\n      // toDate: String(new Date()),\n      currentPage: 1,\n      perPage: 10,\n      pageOptions: [10, 25, 50, 100],\n      totalRows: 1,\n      filter: null,\n      filterOn: [],\n      sortBy: \"id\",\n      sortDesc: false,\n      fields: [\n        {\n          key: \"id\",\n          label: \"ID\",\n          sortable: true,\n        },\n        {\n          key: \"pos_name\",\n          label: \"POS\",\n          sortable: true,\n        },\n        {\n          key: \"username\",\n          label: \"Driver\",\n          sortable: true,\n        },\n        {\n          key: \"difference\",\n          label: \"Difference\",\n          sortable: true,\n        },\n        {\n          key: \"comment\",\n          label: \"Comment\",\n          sortable: true,\n        },\n        {\n          key: \"created_at\",\n          label: \"Date\",\n          sortable: true,\n        },\n        \n      ],\n      items: [\n        {\n          text: \"Tables\",\n          href: \"/\",\n        },\n        {\n          text: \"Advanced\",\n          active: true,\n        },\n      ],\n      toDate: null,\n      selectedBranch: null,\n      branchURL: null,\n      modalItem: {},\n      modalShow: false,\n      showAlert: false,\n      alertText: '',\n      orderStatuses: [],\n      exportData: [],\n      branchOptions: [\n        { value: null, text: 'Select Branch'},\n        { value: 'saburtalo', text: 'Saburtalo'},\n        { value: 'vake', text: 'Vake'},\n        { value: 'digomi', text: 'Digomi'},\n        { value: 'gldani', text: 'Gldani'},\n      ],\n      loggedUser: {},\n      ordersList: [],\n      ordersListOld: [],\n      title: 'Closed Details',\n      status: \"1,2,3,4,5,6,7,8,9,10\",\n      infoModal: {\n        id: 'info-modal',\n        order_id: '',\n        discount: '',\n        discountName: '',\n        discountType: '',\n        customer: '',\n        items: [],\n        totalPrice: '',\n        discPrice: '',\n        totalDue: '',\n      }\n    }\n  },\n  watch: {\n    selectedBranch(val){\n      this.changeBranch(val);\n    },\n    \n  },\n  mounted() {\n    this.fromDate = this.formatDate(this.fromDate);\n    // this.toDate = this.formatDate(this.toDate);\n    this.loggedUser = this.$store.state.authfack.user;\n\n    const TOKEN = this.loggedUser.token;\n\n    axios\n      .request({\n        method: \"post\",\n        url:\n          this.$hostname + \"poses/order-statuses\",\n        headers: {\n          Authorization: \"Bearer \" + TOKEN,\n        },\n      })\n      .then((response) => {\n        this.orderStatuses = response.data.data\n      });\n  },\n  methods: {\n    info(item, index, button) {\n        this.infoModal.title = `Row index: ${index}`\n        this.infoModal.order_id = item.id;\n        this.infoModal.discountName = item.order_data.discountName;\n        this.infoModal.discount = item.order_data.discount;\n        this.infoModal.customer = item.order_data.customer.name;\n        this.infoModal.items = item.order_data.items;\n        this.infoModal.totalPrice = item.order_data.totalPrice;\n        this.infoModal.discPrice = item.order_data.discPrice;\n        this.infoModal.totalDue = item.order_data.totalDue;\n        this.infoModal.content = JSON.stringify(item, null, 2)\n        this.$root.$emit('bv::show::modal', this.infoModal.id, button)\n      },\n    onFiltered(filteredItems) {\n      // Trigger pagination to update the number of buttons/pages due to filtering\n      this.totalRows = filteredItems.length;\n      this.currentPage = 1;\n    },\n    formatDate(date) {\n          var d = new Date(date),\n              month = '' + (d.getMonth() + 1),\n              day = '' + d.getDate(),\n              year = d.getFullYear();\n\n          if (month.length < 2) \n              month = '0' + month;\n          if (day.length < 2) \n              day = '0' + day;\n\n          return [year, month, day].join('-');\n    },\n    changeBranch(branch){\n      if(branch == 'saburtalo'){\n        this.branchURL = 'http://178.134.12.106:8082/ronny/rest/web/index.php?r=v1/';\n      } \n      else if(branch == 'vake'){\n        this.branchURL = 'http://94.43.92.102:8082/ronny/rest/web/index.php?r=v1/';\n      } \n      else if(branch == 'digomi'){\n        this.branchURL = 'http://188.169.16.186:8082/ronny/rest/web/index.php?r=v1/';\n      } \n      else if(branch == 'gldani'){\n        this.branchURL = 'http://178.134.47.222:8082/ronny/rest/web/index.php?r=v1/';\n      } \n    },\n    updateList(){\n      var date\n      if(this.toDate == null) {\n        date = this.fromDate + \" to \" + this.fromDate\n      }\n      else {\n        date = this.fromDate + \" to \" + this.toDate\n      }\n      if(this.selectedBranch == null){\n        this.showAlert = true;\n        this.alertText = \"Select Branch to continue...\";\n      } else {\n\n      const TOKEN = this.loggedUser.token;\n        \n      var bodyUpdate = new FormData();\n      bodyUpdate.set(\"day\", date);\n\n      axios\n        .request({\n          method: \"post\",\n          url:\n            this.branchURL + \"manager/get-close-day\",\n          headers: {\n            Authorization: \"Bearer \" + TOKEN,\n          },\n          data: bodyUpdate,\n        })\n        .then((response) => {\n            this.ordersList = response.data.data;\n\n            this.ordersList.forEach(x => {\n\n            var excelObject = {};\n            \n            excelObject.id = x.id;\n            excelObject.name = x.username;\n            excelObject.posName = x.pos_name;\n            excelObject.diff_cash = x.diff_cash;\n            excelObject.diff_card = x.diff_card;\n            excelObject.driver = x.driver_id;\n            excelObject.created_at = x.created_at;\n\n            this.exportData.push(excelObject);\n          });\n\n        });\n      }\n    },\n  },\n}\n</script>\n\n<template>\n<div>\n  <Layout>\n    <PageHeader :title=\"title\" />\n    <div class=\"row\" data-app>\n      <div class=\"col-12\">\n        <div class=\"card\">\n          <div class=\"card-body\">\n            <div class=\"row\">\n              <b-alert v-model=\"showAlert\" dismissible variant=\"danger\">{{ alertText }}</b-alert>\n            </div>\n            <div class=\"row mb-2\">\n              <div class=\"col-sm-2\">\n                <div class=\"search-box me-2 mb-2 d-inline-block\">\n                  <div class=\"position-relative\">\n                    <b-form-input\n                      v-model=\"filter\"\n                      type=\"search\"\n                      placeholder=\"Search...\"\n                    ></b-form-input>\n                    <i class=\"bx bx-search-alt search-icon\"></i>\n                  </div>\n                </div>\n              </div>\n              <div class=\"col-sm-2\">\n                <b-form-select v-model=\"selectedBranch\" class=\"form-control\" :options=\"branchOptions\"></b-form-select>\n              </div>\n              <!-- end col-->\n            </div>\n              <!-- end col-->\n                <div class=\"row mb-2\">\n                  <div class=\"col-sm-4\">\n                    <div>\n                      <label for=\"example-input\">From</label>\n                      <b-input-group class=\"mb-3\">\n                        <b-form-input\n                          id=\"example-input\"\n                          v-model=\"fromDate\"\n                          type=\"text\"\n                          placeholder=\"YYYY-MM-DD\"\n                          autocomplete=\"off\"\n                        ></b-form-input>\n                        <b-input-group-append>\n                          <b-form-datepicker\n                            v-model=\"fromDate\"\n                            button-only\n                            right\n                            locale=\"en-US\"\n                            aria-controls=\"example-input\"\n                          ></b-form-datepicker>\n                        </b-input-group-append>\n                      </b-input-group>\n                    </div>\n                </div>\n                  <div class=\"col-sm-4\">\n                    <div>\n                      <label for=\"example-input\">To</label>\n                      <b-input-group class=\"mb-3\">\n                        <b-form-input\n                          id=\"example-input\"\n                          v-model=\"toDate\"\n                          type=\"text\"\n                          placeholder=\"YYYY-MM-DD\"\n                          autocomplete=\"off\"\n                        ></b-form-input>\n                        <b-input-group-append>\n                          <b-form-datepicker\n                            v-model=\"toDate\"\n                            button-only\n                            right\n                            locale=\"en-US\"\n                            aria-controls=\"example-input\"\n                          ></b-form-datepicker>\n                        </b-input-group-append>\n                      </b-input-group>\n                    </div>\n                </div>\n                  <div class=\"col-sm-4 mt-4\">\n                    <b-button variant=\"success\" @click=\"updateList()\">\n                      <i\n                        class=\"bx bx-check-double font-size-16 align-middle me-2\"\n                      ></i>\n                      Search\n                    </b-button>\n                    <b-button variant=\"primary\" class=\"mx-2\" v-if=\"exportData.length != 0\">\n                    <export-excel\n                        :data  = \"exportData\"\n                        :name = \"'closed.xls'\">\n                        Export data to Excel\n                        <i class=\"bx bx-download\"></i>\n                    </export-excel>\n                    </b-button>\n                  </div>\n                <!-- end col-->\n              </div>\n            </div>\n            <div class=\"table-responsive mb-0\" style=\"min-height: 300px;\">\n              <b-table\n                class=\"datatables\"\n                :items=\"ordersList\"\n                :fields=\"fields\"\n                responsive=\"sm\"\n                :per-page=\"perPage\"\n                :current-page=\"currentPage\"\n                :sort-by.sync=\"sortBy\"\n                :sort-desc.sync=\"sortDesc\"\n                :filter=\"filter\"\n                :filter-included-fields=\"filterOn\"\n                @filtered=\"onFiltered\"\n              >\n              <template #cell(actions)=\"row\">\n                <b-button size=\"sm\" @click=\"info(row.item, row.index, $event.target)\" class=\"mr-1\">\n                  Info modal\n                </b-button>\n              </template>\n              </b-table>\n            </div>\n          </div>\n          <div class=\"row\">\n              <div class=\"col\">\n                <div\n                  class=\"dataTables_paginate paging_simple_numbers float-end\"\n                >\n                  <ul class=\"pagination pagination-rounded mb-0\">\n                    <label class=\"d-inline-flex align-items-center\">\n                    Show&nbsp;\n                    <b-form-select\n                      class=\"form-select form-select-sm\"\n                      v-model=\"perPage\"\n                      size=\"sm\"\n                      :options=\"pageOptions\"\n                    ></b-form-select\n                    >&nbsp;entries\n                  </label>\n                    <!-- pagination -->\n                    <b-pagination\n                      v-model=\"currentPage\"\n                      :total-rows=\"rows\"\n                      :per-page=\"perPage\"\n                    ></b-pagination>\n                  </ul>\n                </div>\n              </div>\n            </div>\n\n          <!-- end card-body -->\n        </div>\n\n      \n        <!-- end card -->\n      </div>\n      <!-- end col -->\n    <!-- end row -->\n  </Layout>\n  </div>\n</template>\n"]}]}